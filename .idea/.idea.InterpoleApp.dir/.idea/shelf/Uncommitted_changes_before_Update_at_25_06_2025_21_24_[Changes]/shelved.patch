Index: obj/Debug/net9.0/InterpoleApp.AssemblyInfo.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\nusing System;\r\nusing System.Reflection;\r\n\r\n[assembly: System.Reflection.AssemblyCompanyAttribute(\"InterpoleApp\")]\r\n[assembly: System.Reflection.AssemblyConfigurationAttribute(\"Debug\")]\r\n[assembly: System.Reflection.AssemblyFileVersionAttribute(\"1.0.0.0\")]\r\n[assembly: System.Reflection.AssemblyInformationalVersionAttribute(\"1.0.0+7a40b108c407956370495f4d455b7d5fcf7dda35\")]\r\n[assembly: System.Reflection.AssemblyProductAttribute(\"InterpoleApp\")]\r\n[assembly: System.Reflection.AssemblyTitleAttribute(\"InterpoleApp\")]\r\n[assembly: System.Reflection.AssemblyVersionAttribute(\"1.0.0.0\")]\r\n\r\n// Generated by the MSBuild WriteCodeFragment class.\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/obj/Debug/net9.0/InterpoleApp.AssemblyInfo.cs b/obj/Debug/net9.0/InterpoleApp.AssemblyInfo.cs
--- a/obj/Debug/net9.0/InterpoleApp.AssemblyInfo.cs	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/obj/Debug/net9.0/InterpoleApp.AssemblyInfo.cs	(date 1749403580022)
@@ -13,7 +13,7 @@
 [assembly: System.Reflection.AssemblyCompanyAttribute("InterpoleApp")]
 [assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
 [assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
-[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+7a40b108c407956370495f4d455b7d5fcf7dda35")]
+[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+e5df1e13822aae451b350451489c041a3c8f720a")]
 [assembly: System.Reflection.AssemblyProductAttribute("InterpoleApp")]
 [assembly: System.Reflection.AssemblyTitleAttribute("InterpoleApp")]
 [assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
Index: obj/rider.project.model.nuget.info
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>17493991148153523
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/obj/rider.project.model.nuget.info b/obj/rider.project.model.nuget.info
--- a/obj/rider.project.model.nuget.info	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/obj/rider.project.model.nuget.info	(date 1750876668324)
@@ -1,1 +1,1 @@
-17493991148153523
\ No newline at end of file
+17494035797569159
\ No newline at end of file
Index: Views/AddEvidenceView.axaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Window xmlns=\"https://github.com/avaloniaui\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:vm=\"clr-namespace:InterpoleApp.ViewModels\"\r\n        x:Class=\"InterpoleApp.Views.AddEvidenceView\"\r\n        x:DataType=\"vm:AddEvidenceViewModel\"\r\n        Width=\"400\" Height=\"300\"\r\n        Title=\"Добавить преступника\"\r\n        WindowStartupLocation=\"CenterOwner\">\r\n\r\n    <Grid Margin=\"20\" ColumnDefinitions=\"*,*\" RowDefinitions=\"*,*,*,*,*,*\">\r\n        <StackPanel Grid.Row = \"0\" Grid.ColumnSpan=\"2\">\r\n            <TextBlock  Height=\"25\" Text=\"Тема\" />\r\n            <TextBox  Height=\"25\" Watermark=\"Тема\" Text=\"{Binding title}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"1\" Grid.ColumnSpan=\"2\">\r\n            <TextBlock Height=\"25\" Text=\"Опис\"></TextBlock>\r\n            <TextBox Height=\"25\" Watermark=\"Опис\" Text=\"{Binding description}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"2\" Grid.Column=\"1\">\r\n            <TextBlock Height=\"25\" Text=\"Тип уліки\"></TextBlock>\r\n            <ComboBox  Height=\"25\" ItemsSource=\"{Binding Categories}\" SelectedItem=\"{Binding evidenceType}\"/>\r\n        </StackPanel>\r\n        <Button Grid.Column=\"1\" Grid.Row = \"5\" Content=\"Сохранити\"\r\n                Command=\"{Binding SaveCommand}\"\r\n                HorizontalAlignment=\"Right\" Width=\"100\"/>\r\n    </Grid>\r\n</Window>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/AddEvidenceView.axaml b/Views/AddEvidenceView.axaml
--- a/Views/AddEvidenceView.axaml	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/Views/AddEvidenceView.axaml	(date 1750449406259)
@@ -4,7 +4,7 @@
         x:Class="InterpoleApp.Views.AddEvidenceView"
         x:DataType="vm:AddEvidenceViewModel"
         Width="400" Height="300"
-        Title="Добавить преступника"
+        Title="Додати доказ"
         WindowStartupLocation="CenterOwner">
 
     <Grid Margin="20" ColumnDefinitions="*,*" RowDefinitions="*,*,*,*,*,*">
@@ -20,7 +20,7 @@
             <TextBlock Height="25" Text="Тип уліки"></TextBlock>
             <ComboBox  Height="25" ItemsSource="{Binding Categories}" SelectedItem="{Binding evidenceType}"/>
         </StackPanel>
-        <Button Grid.Column="1" Grid.Row = "5" Content="Сохранити"
+        <Button Grid.Column="1" Grid.Row = "5" Content="Зберегти"
                 Command="{Binding SaveCommand}"
                 HorizontalAlignment="Right" Width="100"/>
     </Grid>
Index: obj/rider.project.restore.info
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>17471287352400791
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/obj/rider.project.restore.info b/obj/rider.project.restore.info
--- a/obj/rider.project.restore.info	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/obj/rider.project.restore.info	(date 1750876668991)
@@ -1,1 +1,1 @@
-17471287352400791
\ No newline at end of file
+17494035797569159
\ No newline at end of file
Index: Models/Criminal.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Collections.ObjectModel;\r\nusing InterpoleApp.Models.Enums;\r\n\r\nnamespace InterpoleApp.Models;\r\n\r\npublic class Criminal : Iperson\r\n{\r\n    public Guid id { get; set; } = Guid.NewGuid();\r\n    public string Name { get; set; }\r\n    public string secondName { get; set; }\r\n    public string FullName => $\"{Name} {secondName}\";\r\n    public int DangerLevel { get; set; }\r\n    public int Size { get; set; }\r\n    public EyeColor EyesColor { get; set; }\r\n    public CrimeType CrimeType { get; set; }\r\n    public string Country { get; set; }\r\n\r\n    public ObservableCollection<Evidence> Evidences { get; set; } = new();\r\n    public string GetName() => $\"{Name} {secondName}\";\r\n    public string GetCountry() => $\"{Country}\";\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Models/Criminal.cs b/Models/Criminal.cs
--- a/Models/Criminal.cs	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/Models/Criminal.cs	(date 1749403881004)
@@ -17,7 +17,7 @@
     public CrimeType CrimeType { get; set; }
     public string Country { get; set; }
 
-    public ObservableCollection<Evidence> Evidences { get; set; } = new();
+    //public ObservableCollection<Evidence> Evidences { get; set; } = new();
     public string GetName() => $"{Name} {secondName}";
     public string GetCountry() => $"{Country}";
 }
\ No newline at end of file
Index: ViewModels/EditEvidenceViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.ObjectModel;\r\nusing System.Reactive;\r\nusing InterpoleApp.Models;\r\nusing ReactiveUI;\r\nusing System.Reactive.Linq;\r\nusing InterpoleApp.Models.Enums;\r\n\r\n\r\nnamespace InterpoleApp.ViewModels;\r\n\r\npublic class EditEvidenceViewModel : ReactiveObject\r\n{\r\n    public ObservableCollection<EvidenceType> Categories { get; }\r\n    private string _title;\r\n    private string _description;\r\n    private string _criminalName;\r\n    private EvidenceType _evidenceType;\r\n\r\n    public string title\r\n    {\r\n        get => _title;\r\n        set => this.RaiseAndSetIfChanged(ref _title, value);\r\n    }\r\n    public string description\r\n    {\r\n        get => _description;\r\n        set => this.RaiseAndSetIfChanged(ref _description, value);\r\n    }\r\n    public string criminalName\r\n    {\r\n        get => _criminalName;\r\n        set => this.RaiseAndSetIfChanged(ref _criminalName, value);\r\n    }\r\n    public EvidenceType evidenceType\r\n    {\r\n        get => _evidenceType;\r\n        set => this.RaiseAndSetIfChanged(ref _evidenceType, value);\r\n    }\r\n    private readonly Evidence _evidence;\r\n    public ReactiveCommand<Unit, Evidence> SaveCommand { get; }\r\n\r\n    public EditEvidenceViewModel(Evidence existingEvidence)\r\n    {\r\n        _evidence = existingEvidence;\r\n        Console.WriteLine(\"EditEvidenceViewModel \" + _evidence.Title);\r\n        Categories = new ObservableCollection<EvidenceType>(\r\n            Enum.GetValues(typeof(EvidenceType)) as EvidenceType[]\r\n        );\r\n        title = existingEvidence.Title;\r\n        description = existingEvidence.Description;\r\n        //criminalName = existingEvidence.RelatedCriminal.FullName;\r\n        SaveCommand = ReactiveCommand.Create(() =>\r\n        {\r\n            _evidence.Title = this.title;\r\n            _evidence.Description = this.description;\r\n            _evidence.EvidenceType = this.evidenceType;\r\n            //_evidence.RelatedCriminal.Name = this.criminalName;\r\n            return _evidence;\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ViewModels/EditEvidenceViewModel.cs b/ViewModels/EditEvidenceViewModel.cs
--- a/ViewModels/EditEvidenceViewModel.cs	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/ViewModels/EditEvidenceViewModel.cs	(date 1749404766438)
@@ -43,19 +43,18 @@
     public EditEvidenceViewModel(Evidence existingEvidence)
     {
         _evidence = existingEvidence;
-        Console.WriteLine("EditEvidenceViewModel " + _evidence.Title);
+        Console.WriteLine("EditEvidenceViewModel " + _evidence.EvidenceType);
         Categories = new ObservableCollection<EvidenceType>(
             Enum.GetValues(typeof(EvidenceType)) as EvidenceType[]
         );
         title = existingEvidence.Title;
         description = existingEvidence.Description;
-        //criminalName = existingEvidence.RelatedCriminal.FullName;
+        evidenceType = existingEvidence.EvidenceType;
         SaveCommand = ReactiveCommand.Create(() =>
         {
             _evidence.Title = this.title;
             _evidence.Description = this.description;
             _evidence.EvidenceType = this.evidenceType;
-            //_evidence.RelatedCriminal.Name = this.criminalName;
             return _evidence;
         });
     }
Index: Views/AddCriminalView.axaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Window xmlns=\"https://github.com/avaloniaui\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:vm=\"clr-namespace:InterpoleApp.ViewModels\"\r\n        x:Class=\"InterpoleApp.Views.AddCriminalView\"\r\n        x:DataType=\"vm:AddCriminalViewModel\"\r\n        Width=\"400\" Height=\"300\"\r\n        Title=\"Добавить преступника\"\r\n        WindowStartupLocation=\"CenterOwner\">\r\n\r\n    <Grid Margin=\"20\" ColumnDefinitions=\"*,*\" RowDefinitions=\"*,*,*,*,*,*\">\r\n        <StackPanel Grid.Row = \"0\" Grid.ColumnSpan=\"2\">\r\n            <TextBlock  Height=\"25\" Text=\"Ім'я\" />\r\n            <TextBox  Height=\"25\" Watermark=\"Ім'я\" Text=\"{Binding Name}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"1\" Grid.ColumnSpan=\"2\">\r\n            <TextBlock Height=\"25\" Text=\"Фамілія\"></TextBlock>\r\n            <TextBox Height=\"25\" Watermark=\"Фамілія\" Text=\"{Binding secondName}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"2\" Grid.ColumnSpan=\"2\">\r\n            <TextBlock Height=\"25\" Text=\"Країна\"></TextBlock>\r\n            <TextBox  Height=\"25\" Watermark=\"Країна\" Text=\"{Binding Country}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"3\" Grid.Column=\"0\">\r\n            <TextBlock Height=\"25\" Text=\"Зріст\"></TextBlock>\r\n            <TextBox  Height=\"25\" Watermark=\"Зріст\" Text=\"{Binding size}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"3\" Grid.Column=\"1\">\r\n            <TextBlock Height=\"25\" Text=\"Колір очей\"></TextBlock>\r\n            <ComboBox  Height=\"25\" ItemsSource=\"{Binding Categories}\" SelectedItem=\"{Binding EyeColor}\"/>\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"4\" Grid.Column=\"0\">\r\n            <TextBlock Height=\"25\" Text=\"Рівень небезпеки\"></TextBlock>\r\n            <NumericUpDown  Height=\"25\" Minimum=\"1\" Maximum=\"10\" Value=\"{Binding DangerLevel}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"4\" Grid.Column=\"1\">\r\n            <TextBlock Height=\"25\" Text=\"Тип злочину\"></TextBlock>\r\n            <ComboBox  Height=\"25\" ItemsSource=\"{Binding crimeCategories}\" SelectedItem=\"{Binding CrimeType}\"/>\r\n        </StackPanel>\r\n        <Button Grid.Column=\"1\" Grid.Row = \"5\" Content=\"Сохранити\"\r\n                Command=\"{Binding SaveCommand}\"\r\n                HorizontalAlignment=\"Right\" Width=\"100\"/>\r\n    </Grid>\r\n</Window>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/AddCriminalView.axaml b/Views/AddCriminalView.axaml
--- a/Views/AddCriminalView.axaml	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/Views/AddCriminalView.axaml	(date 1750421805399)
@@ -36,7 +36,7 @@
             <TextBlock Height="25" Text="Тип злочину"></TextBlock>
             <ComboBox  Height="25" ItemsSource="{Binding crimeCategories}" SelectedItem="{Binding CrimeType}"/>
         </StackPanel>
-        <Button Grid.Column="1" Grid.Row = "5" Content="Сохранити"
+        <Button Grid.Column="1" Grid.Row = "5" Content="Зберегти"
                 Command="{Binding SaveCommand}"
                 HorizontalAlignment="Right" Width="100"/>
     </Grid>
Index: Models/Complaint.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\n\r\nnamespace InterpoleApp.Models;\r\n\r\npublic class Complaint\r\n{\r\n    public int  ComplaintId { get; set; }\r\n    public string  Country { get; set; }\r\n    public string Department { get; set; }\r\n    public string Title { get; set; }\r\n    public string Description { get; set; }\r\n    public DateTime Date { get; set; }\r\n    \r\n    public Criminal? RelatedCriminal  { get; set; }\r\n    \r\n    \r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Models/Complaint.cs b/Models/Complaint.cs
--- a/Models/Complaint.cs	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/Models/Complaint.cs	(date 1750448619390)
@@ -4,7 +4,7 @@
 
 public class Complaint
 {
-    public int  ComplaintId { get; set; }
+    public Guid ComplaintID { get; set; } = Guid.NewGuid();
     public string  Country { get; set; }
     public string Department { get; set; }
     public string Title { get; set; }
Index: ViewModels/ComplaintsViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.ObjectModel;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Avalonia.Controls;\r\nusing Avalonia.Controls.ApplicationLifetimes;\r\n//using Avalonia.Controls.Shapes;\r\nusing InterpoleApp.Database;\r\nusing InterpoleApp.Models;\r\nusing InterpoleApp.Models.Enums;\r\nusing InterpoleApp.Systems;\r\nusing ReactiveUI;\r\nusing InterpoleApp.Views;\r\n\r\nnamespace InterpoleApp.ViewModels;\r\n\r\npublic class ComplaintsViewModel : ReactiveObject\r\n{\r\n    \r\n    public ObservableCollection<Complaint> Complaints { get; } = new();\r\n    public ObservableCollection<Complaint> FilteredComplaints { get; } = new();\r\n    public JsonStorageService jsonService = new JsonStorageService();\r\n    private string _searchQuery = \"\";\r\n    public string SearchQuery\r\n    {\r\n        get => _searchQuery;\r\n        set\r\n        {\r\n            this.RaiseAndSetIfChanged(ref _searchQuery, value);\r\n            ApplySearch();\r\n        }\r\n    }\r\n\r\n    private Complaint? _selectedComplaint;\r\n    public Complaint? SelectedComplaint\r\n    {\r\n        get => _selectedComplaint;\r\n        set\r\n        {\r\n            this.RaiseAndSetIfChanged(ref _selectedComplaint, value);\r\n            if (value?.RelatedCriminal != null)\r\n            {\r\n                // OpenCriminalCard(value.RelatedCriminal);\r\n            }\r\n        }\r\n    }\r\n    private async void Load()\r\n    {\r\n        await InitBase();\r\n    }\r\n    private async Task InitBase()\r\n    {\r\n        \r\n        var loaded = await jsonService.GetAllAsync<Complaint>();\r\n\r\n        // Копируем в ObservableCollection\r\n        this.Complaints.Clear();\r\n        foreach (var c in loaded)\r\n            this.Complaints.Add(c);\r\n        \r\n        \r\n        await jsonService.SaveAllAsync(this.Complaints.ToList());\r\n        Console.WriteLine(\"Сохраняем в: \" + Path.GetFullPath(\"Database/complaints.json\"));\r\n        UpdateList();\r\n    }\r\n    public ComplaintsViewModel()\r\n    {\r\n        Load();\r\n        Console.WriteLine(Complaints.Count);\r\n        UpdateList();\r\n    }\r\n    public async Task AddViaDialog(Window owner)\r\n    {\r\n        int newId = Complaints.Any() ? Complaints.Max(c => c.ComplaintId) + 1 : 1;\r\n        var _jsonService = new JsonStorageService();\r\n        var dialog = new AddComplaintsView();\r\n        var complaint = await dialog.ShowDialogAsync(owner);\r\n\r\n        if (complaint != null)\r\n        {\r\n            complaint.ComplaintId = newId;\r\n            Console.WriteLine(\"Adding new complaint \" + complaint.Title);\r\n            Complaints.Add(complaint);\r\n            UpdateList();\r\n            await _jsonService.SaveAllAsync(Complaints.ToList());\r\n        }\r\n    }\r\n    private void ApplySearch()\r\n    {\r\n        var filtered = Levenshtein.ApplySearch(\r\n            Complaints,\r\n            c => c.Title,\r\n            SearchQuery\r\n        );\r\n\r\n        FilteredComplaints.Clear();\r\n        foreach (var c in filtered)\r\n            FilteredComplaints.Add(c);\r\n    }\r\n    public void UpdateList()\r\n    {\r\n        FilteredComplaints.Clear();\r\n        foreach (var item in Complaints)\r\n        {\r\n            FilteredComplaints.Add(item);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ViewModels/ComplaintsViewModel.cs b/ViewModels/ComplaintsViewModel.cs
--- a/ViewModels/ComplaintsViewModel.cs	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/ViewModels/ComplaintsViewModel.cs	(date 1750448630523)
@@ -72,14 +72,12 @@
     }
     public async Task AddViaDialog(Window owner)
     {
-        int newId = Complaints.Any() ? Complaints.Max(c => c.ComplaintId) + 1 : 1;
         var _jsonService = new JsonStorageService();
         var dialog = new AddComplaintsView();
         var complaint = await dialog.ShowDialogAsync(owner);
 
         if (complaint != null)
         {
-            complaint.ComplaintId = newId;
             Console.WriteLine("Adding new complaint " + complaint.Title);
             Complaints.Add(complaint);
             UpdateList();
Index: ViewModels/CriminalListViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Collections.ObjectModel;\r\nusing System.Globalization;\r\nusing System.Linq;\r\nusing ReactiveUI;\r\nusing System.Reactive;\r\nusing Avalonia.Controls;\r\nusing InterpoleApp.Database;\r\nusing InterpoleApp.ViewModels;\r\nusing InterpoleApp.Views;\r\nusing InterpoleApp.Models;\r\nusing System.IO;\r\nusing System.Threading.Tasks;\r\nusing Avalonia.Data.Converters;\r\nusing InterpoleApp.Systems;\r\n\r\nnamespace InterpoleApp.ViewModels;\r\n\r\npublic class CriminalListViewModel : ViewModelBase\r\n{\r\n    private readonly MainViewModel _main;\r\n    public List<int?> DangerLevels { get; } = new() { null, 1, 2, 3, 4, 5 };\r\n    private int? _selectedDangerLevel;\r\n\r\n    public int? SelectedDangerLevel\r\n    {\r\n        get => _selectedDangerLevel;\r\n        set\r\n        {\r\n            \r\n            this.RaiseAndSetIfChanged(ref _selectedDangerLevel, value);\r\n            FilteringByDanger();\r\n        }\r\n    }\r\n    private string _searchQuery = \"\";\r\n    public string SearchQuery\r\n    {\r\n        get => _searchQuery;\r\n        set\r\n        {\r\n            this.RaiseAndSetIfChanged(ref _searchQuery, value);\r\n            ApplySearch();\r\n        }\r\n    }\r\n    public ObservableCollection<Criminal> Criminals { get; set; } = new();\r\n    public ObservableCollection<Criminal> FilteredCriminals { get; set; } = new();\r\n    public ReactiveCommand<Unit, Unit> AddCriminalCommand { get; }\r\n    public ReactiveCommand<Unit, Unit> DeleteCommand { get; }\r\n    public ReactiveCommand<Unit, Unit> LookCommand { get; }\r\n    public JsonStorageService jsonService = new JsonStorageService();\r\n    private async Task InitBase()\r\n    {\r\n        \r\n        var loaded = await jsonService.GetAllAsync<Criminal>();\r\n\r\n        // Копируем в ObservableCollection\r\n        this.Criminals.Clear();\r\n        foreach (var c in loaded)\r\n            this.Criminals.Add(c);\r\n        \r\n        \r\n        await jsonService.SaveAllAsync(this.Criminals.ToList());\r\n        Console.WriteLine(\"Сохраняем в: \" + Path.GetFullPath(\"Database/criminals.json\"));\r\n        UpdateList();\r\n    }\r\n    \r\n    public CriminalListViewModel()\r\n    {\r\n        Console.WriteLine($\"Created CriminalListViewModel с ID: {this.GetHashCode()}\");\r\n        //_main = main;\r\n        var jsonService = new JsonStorageService();\r\n        Load();\r\n    }\r\n\r\n    private void DeleteCriminal(Criminal toDelete)\r\n    {\r\n        Criminals.Remove(toDelete);\r\n        jsonService.SaveAllAsync(Criminals.ToList());\r\n        UpdateList();\r\n    }\r\n\r\n    private async void Load()\r\n    {\r\n        await InitBase();\r\n        Console.WriteLine(\"Loaded: \" + Criminals.Count + \" criminals\"); \r\n        Console.WriteLine(\"FilteredCriminals: \" + FilteredCriminals.Count);\r\n    }\r\n    public async Task AddViaDialog(Window owner)\r\n    {\r\n        //int newId = Criminals.Any() ? Criminals.Max(c => c.id) + 1 : 1;\r\n        var _jsonService = new JsonStorageService();\r\n        var dialog = new AddCriminalView();\r\n        var criminal = await dialog.ShowDialogAsync(owner);\r\n\r\n        if (criminal != null)\r\n        {\r\n            //criminal.id = newId;\r\n            Criminals.Add(criminal);\r\n            UpdateList();\r\n            await _jsonService.SaveAllAsync(Criminals.ToList());\r\n        }\r\n    }\r\n    public async Task EditViaDialog(Window owner, Criminal crimi)\r\n    {\r\n        var _jsonService = new JsonStorageService();\r\n        var dialog = new EditCriminalView();\r\n        var criminal = await dialog.ShowEdiotDialog(owner, crimi);\r\n        UpdateList();\r\n        await _jsonService.SaveAllAsync(Criminals.ToList());\r\n    }\r\n\r\n    public async Task Look(Window owner, Criminal criminal)\r\n    {\r\n        Console.WriteLine(\"Details\");\r\n        _main.ShowCriminalDetails(criminal);\r\n        var _jsonService = new JsonStorageService();\r\n    }\r\n    private void ApplySearch()\r\n    {\r\n        var filtered = Levenshtein.ApplySearch(\r\n            Criminals,\r\n            c => c.Name,\r\n            SearchQuery\r\n        );\r\n\r\n        FilteredCriminals.Clear();\r\n        foreach (var c in filtered)\r\n            FilteredCriminals.Add(c);\r\n    }\r\n\r\n    private void FilteringByDanger()\r\n    {\r\n        // Console.WriteLine(\"_selectedDangLev \" + _selectedDangerLevel);\r\n        // Console.WriteLine(\"SelectedDangLev \" + SelectedDangerLevel);\r\n        IEnumerable<Criminal> baseList = Criminals;\r\n\r\n        if (SelectedDangerLevel is not null)\r\n            baseList = baseList.Where(c => c.DangerLevel == SelectedDangerLevel);\r\n\r\n        FilteredCriminals.Clear(); // ← сначала очищаем\r\n        foreach (var c in baseList.ToList())\r\n        {\r\n            Console.WriteLine(c.Name);\r\n            FilteredCriminals.Add(c);\r\n        }\r\n    }\r\n\r\n    public void UpdateList()\r\n    {\r\n        FilteredCriminals.Clear();\r\n        foreach (var item in Criminals)\r\n        {\r\n            FilteredCriminals.Add(item);\r\n        }\r\n    }\r\n\r\n    public async Task SaveAllCriminals()\r\n    {\r\n        await jsonService.SaveAllAsync(Criminals.ToList());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ViewModels/CriminalListViewModel.cs b/ViewModels/CriminalListViewModel.cs
--- a/ViewModels/CriminalListViewModel.cs	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/ViewModels/CriminalListViewModel.cs	(date 1749403577875)
@@ -12,6 +12,7 @@
 using InterpoleApp.Models;
 using System.IO;
 using System.Threading.Tasks;
+using Avalonia.Controls.ApplicationLifetimes;
 using Avalonia.Data.Converters;
 using InterpoleApp.Systems;
 
@@ -75,9 +76,15 @@
 
     private void DeleteCriminal(Criminal toDelete)
     {
-        Criminals.Remove(toDelete);
-        jsonService.SaveAllAsync(Criminals.ToList());
-        UpdateList();
+        if (App.Current.ApplicationLifetime is IClassicDesktopStyleApplicationLifetime desktop &&
+            desktop.MainWindow?.DataContext is MainViewModel main)
+        {
+            Criminals.Remove(toDelete);
+            jsonService.SaveAllAsync(Criminals.ToList());
+            UpdateList();
+            main.EvidenceService.SaveAllAsync();
+        }
+        
     }
 
     private async void Load()
Index: Views/LookComplainView.axaml.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Linq;\r\nusing System.Reactive.Disposables;\r\nusing Avalonia.Controls;\r\nusing Avalonia.Controls.ApplicationLifetimes;\r\nusing Avalonia.Interactivity;\r\nusing Avalonia.ReactiveUI;\r\nusing InterpoleApp.Models;\r\nusing InterpoleApp.ViewModels;\r\nusing ReactiveUI;\r\n\r\nnamespace InterpoleApp.Views;\r\n\r\npublic partial class LookComplainView : ReactiveUserControl<LookComplainViewModel>\r\n{\r\n    public LookComplainView()\r\n    {\r\n        InitializeComponent();\r\n    }\r\n\r\n    private void MergeBtn_Click(object sender, RoutedEventArgs e)\r\n    {\r\n        Console.WriteLine(\"MergeBtn_Click\");\r\n\r\n        if (sender is Button btn && btn.Tag is Criminal criminal)\r\n        {\r\n            Console.WriteLine(\"Entered 1 MergeBtn_Click\");\r\n            Console.WriteLine(criminal.Name);\r\n\r\n            if (App.Current.ApplicationLifetime is IClassicDesktopStyleApplicationLifetime desktop &&\r\n                desktop.MainWindow?.DataContext is MainViewModel main)\r\n            {\r\n                var criminalListVM = main.CriminalListVM;\r\n                \r\n                    criminalListVM.Criminals.Add(criminal);\r\n                    criminalListVM.jsonService.SaveAllAsync(criminalListVM.Criminals.ToList());\r\n                    criminalListVM.UpdateList(); // если он делает фильтрацию или сортировку\r\n                    \r\n                    \r\n                    var complaintVM = main.ComplaintsVM;\r\n\r\n                    // Знайдемо скаргу, до якої був прив’язаний цей порушник\r\n                    var toDelete = complaintVM.Complaints\r\n                        .FirstOrDefault(c => c.RelatedCriminal?.id == criminal.id);\r\n\r\n                    if (toDelete != null)\r\n                    {\r\n                        complaintVM.Complaints.Remove(toDelete);\r\n                        complaintVM.jsonService.SaveAllAsync(complaintVM.Complaints.ToList());\r\n                        complaintVM.UpdateList(); // якщо є фільтрація\r\n                    }\r\n            }\r\n        }\r\n        \r\n    }\r\n    private void LookBtn_Click(object? sender, RoutedEventArgs e)\r\n    {\r\n        Console.WriteLine(\"LookBtn_Click\");\r\n        if (sender is TextBlock tb && tb.Tag is Criminal criminal)\r\n        {\r\n            Console.WriteLine(\"Entred 1 LookBtn_Click\");\r\n            // Найдём MainViewModel через DisplayRoot\r\n            if (DataContext is LookComplainViewModel && App.Current.ApplicationLifetime is IClassicDesktopStyleApplicationLifetime desktop)\r\n            {\r\n                Console.WriteLine(\"Entred 2 LookBtn_Click\");\r\n                // Здесь предполагаем, что DataContext окна — это MainViewModel\r\n                if (desktop.MainWindow?.DataContext is MainViewModel main)\r\n                {\r\n                    main.CurrentUser = new LookCriminalView\r\n                    {\r\n                        DataContext = new LookCriminalViewModel(criminal)\r\n                    };\r\n                    main.CurrentPage = null;\r\n                    main.RaisePropertyChanged(nameof(main.DisplayedContent));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private void BackButton_Click(object? sender, RoutedEventArgs e)\r\n    {\r\n        if (App.Current.ApplicationLifetime is IClassicDesktopStyleApplicationLifetime desktop)\r\n        {\r\n            if (desktop.MainWindow?.DataContext is MainViewModel main)\r\n            {\r\n                // Назначаем новый CriminalListView с нужным ViewModel\r\n                var listView = new ComplaintsView\r\n                {\r\n                    DataContext = new ComplaintsViewModel()\r\n                };\r\n\r\n                main.CurrentUser = listView;\r\n                main.CurrentPage = null;\r\n                main.NotifyDisplayedContentChanged();\r\n            }\r\n        }\r\n    }\r\n    private void LookButton_Click(object? sender, RoutedEventArgs e)\r\n    {\r\n        if (sender is TextBlock tb && tb.DataContext is Complaint complaint)\r\n        {\r\n            // Найдём MainViewModel через DisplayRoot\r\n            if (DataContext is CriminalListViewModel && App.Current.ApplicationLifetime is IClassicDesktopStyleApplicationLifetime desktop)\r\n            {\r\n                // Здесь предполагаем, что DataContext окна — это MainViewModel\r\n                if (desktop.MainWindow?.DataContext is MainViewModel main)\r\n                {\r\n                    main.CurrentUser = new LookComplainView\r\n                    {\r\n                        DataContext = new LookComplainViewModel(complaint)\r\n                    };\r\n                    main.CurrentPage = null;\r\n                    main.RaisePropertyChanged(nameof(main.DisplayedContent));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/LookComplainView.axaml.cs b/Views/LookComplainView.axaml.cs
--- a/Views/LookComplainView.axaml.cs	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/Views/LookComplainView.axaml.cs	(date 1750448875192)
@@ -22,8 +22,9 @@
     {
         Console.WriteLine("MergeBtn_Click");
 
-        if (sender is Button btn && btn.Tag is Criminal criminal)
+        if (sender is Button btn && btn.Tag is Criminal criminal && DataContext is LookComplainViewModel vm)
         {
+            var complaint = vm.Complaint;
             Console.WriteLine("Entered 1 MergeBtn_Click");
             Console.WriteLine(criminal.Name);
 
@@ -34,21 +35,32 @@
                 
                     criminalListVM.Criminals.Add(criminal);
                     criminalListVM.jsonService.SaveAllAsync(criminalListVM.Criminals.ToList());
-                    criminalListVM.UpdateList(); // если он делает фильтрацию или сортировку
+                    criminalListVM.UpdateList();
                     
                     
                     var complaintVM = main.ComplaintsVM;
 
                     // Знайдемо скаргу, до якої був прив’язаний цей порушник
-                    var toDelete = complaintVM.Complaints
-                        .FirstOrDefault(c => c.RelatedCriminal?.id == criminal.id);
-
+                    var toDelete = complaint;
+                    Console.WriteLine("Deleting bcs merge " + toDelete?.Title ?? "");
                     if (toDelete != null)
                     {
                         complaintVM.Complaints.Remove(toDelete);
                         complaintVM.jsonService.SaveAllAsync(complaintVM.Complaints.ToList());
+                        foreach (var c in complaintVM.Complaints)
+                        {
+                            Console.WriteLine(c.Title);
+                        }
                         complaintVM.UpdateList(); // якщо є фільтрація
                     }
+                    var listView = new CriminalListView
+                    {
+                        DataContext = new CriminalListViewModel()
+                    };
+
+                    main.CurrentUser = listView;
+                    main.CurrentPage = null;
+                    main.NotifyDisplayedContentChanged();
             }
         }
         
Index: ViewModels/LookComplainViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Runtime.CompilerServices;\r\nusing InterpoleApp.Models;\r\nusing InterpoleApp.Models.Enums;\r\n\r\nnamespace InterpoleApp.ViewModels;\r\n\r\npublic class LookComplainViewModel : ViewModelBase\r\n{\r\n    public Guid Id { get; } = Guid.NewGuid();\r\n    public string title { get; set; } = \"\";\r\n    public string country { get; set; } = \"\";\r\n    public string department { get; set; } = \"\";\r\n    public string description { get; set; } = \"\";\r\n    public Criminal criminal { get; set; }\r\n    public LookComplainViewModel(Complaint complaint)\r\n    {\r\n        title = complaint.Title;\r\n        country = complaint.Country;\r\n        department = complaint.Department;\r\n        description = complaint.Description;\r\n        criminal = complaint.RelatedCriminal;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ViewModels/LookComplainViewModel.cs b/ViewModels/LookComplainViewModel.cs
--- a/ViewModels/LookComplainViewModel.cs	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/ViewModels/LookComplainViewModel.cs	(date 1749405362056)
@@ -13,8 +13,10 @@
     public string department { get; set; } = "";
     public string description { get; set; } = "";
     public Criminal criminal { get; set; }
+    public Complaint Complaint { get; }
     public LookComplainViewModel(Complaint complaint)
     {
+        Complaint = complaint;
         title = complaint.Title;
         country = complaint.Country;
         department = complaint.Department;
Index: Database/complaints.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Database/complaints.json b/Database/complaints.json
--- a/Database/complaints.json	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/Database/complaints.json	(date 1750876874305)
@@ -1,1 +1,40 @@
-[]
\ No newline at end of file
+[
+  {
+    "complaintID": "feec5e7e-84ae-4ec5-b7a1-87bee187d43c",
+    "country": "\u0423\u043A\u0440\u0430\u0457\u043D\u0430",
+    "department": "\u041C\u0412\u0421 \u0423\u043A\u0440\u0430\u0457\u043D\u0438",
+    "title": "\u041F\u0441\u0438\u0445\u0456\u0447\u043D\u0435 \u043F\u043E\u0440\u0443\u0448\u0435\u043D\u043D\u044F",
+    "description": "\u0411\u0443\u0432 \u043F\u043E\u043C\u0456\u0447\u0435\u043D\u0438\u0439 \u0432 \u0442\u0443\u0430\u043B\u0435\u0442\u0456 \u043D\u0430\u0433\u043B\u044F\u0434\u0443\u0432\u0430\u043D\u043D\u044F\u043C \u0437\u0430 \u0433\u043E\u0434\u0438\u043D\u043D\u0438\u043A\u043E\u043C.\u041F\u043E\u0440\u0443\u0448\u0435\u043D\u0438\u043A \u0434\u0443\u0436\u0435 \u043D\u0435\u0431\u0435\u0437\u043F\u0435\u0447\u043D\u0438\u0439.\u0421\u043F\u0456\u0439\u043C\u0430\u0442\u0438 \u044F\u043A \u0442\u0456\u043B\u044C\u043A\u0438 \u0437\u0027\u0432\u0438\u0442\u0441\u044F \u043D\u0430 \u043F\u043E\u0440\u043E\u0437\u0456 3 \u0441\u0432\u0456\u0442\u043E\u0432\u043E\u0457",
+    "date": "0001-01-01T00:00:00",
+    "relatedCriminal": {
+      "id": "774f1443-34f6-4aaa-874d-e38152842956",
+      "name": "\u0421\u0442\u0430\u0441",
+      "secondName": "\u0422\u0440\u043E\u0444\u0456\u043C\u043E\u0432",
+      "fullName": "\u0421\u0442\u0430\u0441 \u0422\u0440\u043E\u0444\u0456\u043C\u043E\u0432",
+      "dangerLevel": 4,
+      "size": 19000,
+      "eyesColor": 4,
+      "crimeType": 4,
+      "country": "\u0411\u043E\u0433\u043E\u0434\u0443\u0445\u0456\u0432"
+    }
+  },
+  {
+    "complaintID": "140e7a0f-41a7-4645-aa64-39d0a4537dd2",
+    "country": "\u0423\u043A\u0440\u0430\u0457\u043D\u0430",
+    "department": "\u0413\u0423\u0420 \u0423\u043A\u0440\u0430\u0457\u043D\u0430",
+    "title": "\u0414\u043E\u043C\u0430\u0433\u0430\u0442\u0435\u043B\u044C\u0441\u0442\u0432\u043E \u043F\u043E\u043C\u043E\u0433\u0430\u043D\u043D\u044F\u043C",
+    "description": "\u041D\u0430\u043B\u0430\u0448\u0442\u0443\u0432\u0430\u043D\u043D\u044F \u043C\u0456\u0442\u043E\u043A \u0441\u0430\u043B\u043E \u0437\u0430 \u0434\u043E\u043F\u043E\u043C\u043E\u0433\u043E\u044E \u0432\u0447\u0430\u0441\u043D\u043E\u0457 \u0434\u043E\u043F\u043E\u043C\u043E\u0433\u0438",
+    "date": "0001-01-01T00:00:00",
+    "relatedCriminal": {
+      "id": "9d40ee4a-6826-477b-b3c2-88c4b6b6cc1e",
+      "name": "\u041E\u043B\u0435\u043A\u0441\u0430\u043D\u0434\u0440",
+      "secondName": "\u0421\u0435\u0440\u0433\u0454\u0454\u0432",
+      "fullName": "\u041E\u043B\u0435\u043A\u0441\u0430\u043D\u0434\u0440 \u0421\u0435\u0440\u0433\u0454\u0454\u0432",
+      "dangerLevel": 2,
+      "size": 184,
+      "eyesColor": 1,
+      "crimeType": 2,
+      "country": "\u0423\u043A\u0440\u0430\u0457\u043D\u0430"
+    }
+  }
+]
\ No newline at end of file
Index: Database/criminals.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[\r\n  {\r\n    \"id\": \"c4afcc69-e628-49ea-89ea-f220a0d3da70\",\r\n    \"name\": \"Test1\",\r\n    \"secondName\": \"gsf\",\r\n    \"fullName\": \"Test1 gsf\",\r\n    \"dangerLevel\": 3,\r\n    \"size\": 1242,\r\n    \"eyesColor\": 1,\r\n    \"crimeType\": 2,\r\n    \"country\": \"dfs\",\r\n    \"evidences\": [\r\n      {\r\n        \"id\": \"4f8baf25-bcf2-4091-9745-a1a42371ca56\",\r\n        \"title\": \"Evid1\",\r\n        \"description\": \"dfdgs\",\r\n        \"evidenceType\": 2\r\n      },\r\n      {\r\n        \"id\": \"f4f9f8cf-18fa-4acb-bb1a-3f6989506dd0\",\r\n        \"title\": \"Evid2\",\r\n        \"description\": \"sgfadgndfs\",\r\n        \"evidenceType\": 2\r\n      }\r\n    ]\r\n  }\r\n]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Database/criminals.json b/Database/criminals.json
--- a/Database/criminals.json	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/Database/criminals.json	(date 1750876875035)
@@ -6,22 +6,30 @@
     "fullName": "Test1 gsf",
     "dangerLevel": 3,
     "size": 1242,
-    "eyesColor": 1,
+    "eyesColor": 3,
     "crimeType": 2,
-    "country": "dfs",
-    "evidences": [
-      {
-        "id": "4f8baf25-bcf2-4091-9745-a1a42371ca56",
-        "title": "Evid1",
-        "description": "dfdgs",
-        "evidenceType": 2
-      },
-      {
-        "id": "f4f9f8cf-18fa-4acb-bb1a-3f6989506dd0",
-        "title": "Evid2",
-        "description": "sgfadgndfs",
-        "evidenceType": 2
-      }
-    ]
+    "country": "dfs"
+  },
+  {
+    "id": "73c92512-07a0-4f61-a078-1e4629c668bb",
+    "name": "\u0410\u043D\u043D\u0430",
+    "secondName": "\u0410\u043D\u0440\u0456\u0454\u043D\u043A\u043E",
+    "fullName": "\u0410\u043D\u043D\u0430 \u0410\u043D\u0440\u0456\u0454\u043D\u043A\u043E",
+    "dangerLevel": 5,
+    "size": 160,
+    "eyesColor": 1,
+    "crimeType": 6,
+    "country": "\u0427\u0435\u0445\u0438\u044F"
+  },
+  {
+    "id": "9836e6c2-f2c9-4fa4-a9c3-0b722afbe635",
+    "name": "\u041C\u0430\u043A\u0441\u0438\u043C",
+    "secondName": "\u0414\u0027\u044F\u043A\u043E\u0432",
+    "fullName": "\u041C\u0430\u043A\u0441\u0438\u043C \u0414\u0027\u044F\u043A\u043E\u0432",
+    "dangerLevel": 4,
+    "size": 184,
+    "eyesColor": 2,
+    "crimeType": 1,
+    "country": "\u0423\u043A\u0440\u0430\u0457\u043D\u0430"
   }
 ]
\ No newline at end of file
Index: Views/EditCriminalView.axaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Window xmlns=\"https://github.com/avaloniaui\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:vm=\"clr-namespace:InterpoleApp.ViewModels\"\r\n        x:Class=\"InterpoleApp.Views.EditCriminalView\"\r\n        x:DataType=\"vm:EditCriminalViewModel\"\r\n        Width=\"400\" Height=\"300\"\r\n        Title=\"Редагування\"\r\n        WindowStartupLocation=\"CenterOwner\">\r\n\r\n    <Grid Margin=\"20\" ColumnDefinitions=\"*,*\" RowDefinitions=\"*,*,*,*,*,*\">\r\n        <StackPanel Grid.Row = \"0\" Grid.ColumnSpan=\"2\">\r\n            <TextBlock  Height=\"25\" Text=\"Ім'я\" />\r\n            <TextBox  Height=\"25\" Watermark=\"Ім'я\" Text=\"{Binding Name}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"1\" Grid.ColumnSpan=\"2\">\r\n            <TextBlock Height=\"25\" Text=\"Фамілія\"></TextBlock>\r\n            <TextBox Height=\"25\" Watermark=\"Фамілія\" Text=\"{Binding SecondName}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"2\" Grid.ColumnSpan=\"2\">\r\n            <TextBlock Height=\"25\" Text=\"Країна\"></TextBlock>\r\n            <TextBox  Height=\"25\" Watermark=\"Країна\" Text=\"{Binding Country}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"3\" Grid.Column=\"0\">\r\n            <TextBlock Height=\"25\" Text=\"Зріст\"></TextBlock>\r\n            <TextBox  Height=\"25\" Watermark=\"Зріст\" Text=\"{Binding Size}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"3\" Grid.Column=\"1\">\r\n            <TextBlock Height=\"25\" Text=\"Колір очей\"></TextBlock>\r\n            <ComboBox  Height=\"25\" ItemsSource=\"{Binding Categories}\" SelectedItem=\"{Binding EyeColor}\"/>\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"4\" Grid.Column=\"0\">\r\n            <TextBlock Height=\"25\" Text=\"Рівень небезпеки\"></TextBlock>\r\n            <NumericUpDown  Height=\"25\" Minimum=\"1\" Maximum=\"10\" Value=\"{Binding DangerLevel}\" />\r\n        </StackPanel>\r\n        <StackPanel Grid.Row = \"4\" Grid.Column=\"1\">\r\n            <TextBlock Height=\"25\" Text=\"Тип злочину\"></TextBlock>\r\n            <ComboBox  Height=\"25\" ItemsSource=\"{Binding crimeCategories}\" SelectedItem=\"{Binding CrimeType}\"/>\r\n        </StackPanel>\r\n        <Button Grid.Column=\"1\" Grid.Row = \"5\" Content=\"Сохранити\"\r\n                Command=\"{Binding SaveCommand}\"\r\n                HorizontalAlignment=\"Right\" Width=\"100\"/>\r\n    </Grid>\r\n</Window>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/EditCriminalView.axaml b/Views/EditCriminalView.axaml
--- a/Views/EditCriminalView.axaml	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/Views/EditCriminalView.axaml	(date 1750422973496)
@@ -36,7 +36,7 @@
             <TextBlock Height="25" Text="Тип злочину"></TextBlock>
             <ComboBox  Height="25" ItemsSource="{Binding crimeCategories}" SelectedItem="{Binding CrimeType}"/>
         </StackPanel>
-        <Button Grid.Column="1" Grid.Row = "5" Content="Сохранити"
+        <Button Grid.Column="1" Grid.Row = "5" Content="Зберегти"
                 Command="{Binding SaveCommand}"
                 HorizontalAlignment="Right" Width="100"/>
     </Grid>
Index: obj/InterpoleApp.csproj.nuget.g.props
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <RestoreSuccess Condition=\" '$(RestoreSuccess)' == '' \">True</RestoreSuccess>\r\n    <RestoreTool Condition=\" '$(RestoreTool)' == '' \">NuGet</RestoreTool>\r\n    <ProjectAssetsFile Condition=\" '$(ProjectAssetsFile)' == '' \">$(MSBuildThisFileDirectory)project.assets.json</ProjectAssetsFile>\r\n    <NuGetPackageRoot Condition=\" '$(NuGetPackageRoot)' == '' \">$(UserProfile)\\.nuget\\packages\\</NuGetPackageRoot>\r\n    <NuGetPackageFolders Condition=\" '$(NuGetPackageFolders)' == '' \">C:\\Users\\Сава\\.nuget\\packages\\</NuGetPackageFolders>\r\n    <NuGetProjectStyle Condition=\" '$(NuGetProjectStyle)' == '' \">PackageReference</NuGetProjectStyle>\r\n    <NuGetToolVersion Condition=\" '$(NuGetToolVersion)' == '' \">6.13.2</NuGetToolVersion>\r\n  </PropertyGroup>\r\n  <ItemGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <SourceRoot Include=\"C:\\Users\\Сава\\.nuget\\packages\\\" />\r\n  </ItemGroup>\r\n  <ImportGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)skiasharp.nativeassets.webassembly\\2.88.9\\buildTransitive\\netstandard1.0\\SkiaSharp.NativeAssets.WebAssembly.props\" Condition=\"Exists('$(NuGetPackageRoot)skiasharp.nativeassets.webassembly\\2.88.9\\buildTransitive\\netstandard1.0\\SkiaSharp.NativeAssets.WebAssembly.props')\" />\r\n    <Import Project=\"$(NuGetPackageRoot)harfbuzzsharp.nativeassets.webassembly\\7.3.0.3\\buildTransitive\\netstandard1.0\\HarfBuzzSharp.NativeAssets.WebAssembly.props\" Condition=\"Exists('$(NuGetPackageRoot)harfbuzzsharp.nativeassets.webassembly\\7.3.0.3\\buildTransitive\\netstandard1.0\\HarfBuzzSharp.NativeAssets.WebAssembly.props')\" />\r\n    <Import Project=\"$(NuGetPackageRoot)avalonia\\11.3.0\\buildTransitive\\Avalonia.props\" Condition=\"Exists('$(NuGetPackageRoot)avalonia\\11.3.0\\buildTransitive\\Avalonia.props')\" />\r\n  </ImportGroup>\r\n  <PropertyGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <PkgAvalonia_BuildServices Condition=\" '$(PkgAvalonia_BuildServices)' == '' \">C:\\Users\\Сава\\.nuget\\packages\\avalonia.buildservices\\0.0.31</PkgAvalonia_BuildServices>\r\n    <PkgAvalonia Condition=\" '$(PkgAvalonia)' == '' \">C:\\Users\\Сава\\.nuget\\packages\\avalonia\\11.3.0</PkgAvalonia>\r\n  </PropertyGroup>\r\n</Project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/obj/InterpoleApp.csproj.nuget.g.props b/obj/InterpoleApp.csproj.nuget.g.props
--- a/obj/InterpoleApp.csproj.nuget.g.props	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/obj/InterpoleApp.csproj.nuget.g.props	(date 1749403579739)
@@ -7,7 +7,7 @@
     <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">$(UserProfile)\.nuget\packages\</NuGetPackageRoot>
     <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">C:\Users\Сава\.nuget\packages\</NuGetPackageFolders>
     <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
-    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">6.13.2</NuGetToolVersion>
+    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">6.12.2</NuGetToolVersion>
   </PropertyGroup>
   <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
     <SourceRoot Include="C:\Users\Сава\.nuget\packages\" />
Index: Views/LookCriminalView.axaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><UserControl\r\n    xmlns=\"https://github.com/avaloniaui\"\r\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n    xmlns:vm=\"clr-namespace:InterpoleApp.ViewModels\"\r\n    xmlns:models=\"clr-namespace:InterpoleApp.Models\"\r\n    xmlns:system=\"clr-namespace:System;assembly=System.Runtime\"\r\n    x:Class=\"InterpoleApp.Views.LookCriminalView\"\r\n    x:DataType=\"vm:LookCriminalViewModel\">\r\n    <Grid RowDefinitions=\"50,50,50,50,50,50,50,50\" ColumnDefinitions=\"15*,90*\">\r\n        <TextBlock Grid.Row=\"0\" Grid.Column=\"0\" Text=\"Ім'я злочинника:\"></TextBlock>\r\n        <TextBlock Grid.Row=\"0\" Grid.Column=\"1\" Text=\"{Binding Criminal.FullName}\"></TextBlock>\r\n        <TextBlock Grid.Row=\"1\" Grid.Column=\"0\" Text=\"Країна походження:\"></TextBlock>\r\n        <TextBlock Grid.Row=\"1\" Grid.Column=\"1\" Text=\"{Binding Criminal.Country}\"></TextBlock>\r\n        <TextBlock Grid.Row=\"2\" Grid.Column=\"0\" Text=\"Рівень небезпеки:\"></TextBlock>\r\n        <TextBlock Grid.Row=\"2\" Grid.Column=\"1\" Text=\"{Binding Criminal.DangerLevel}\"></TextBlock>\r\n        <TextBlock Grid.Row=\"3\" Grid.Column=\"0\" Text=\"Зріст:\"></TextBlock>\r\n        <TextBlock Grid.Row=\"3\" Grid.Column=\"1\" Text=\"{Binding Criminal.Size}\"></TextBlock>\r\n        <TextBlock Grid.Row=\"4\" Grid.Column=\"0\" Text=\"Колір очей:\"></TextBlock>\r\n        <TextBlock Grid.Row=\"4\" Grid.Column=\"1\" Text=\"{Binding Criminal.EyesColor}\"></TextBlock>\r\n        <TextBlock Grid.Row=\"5\" Grid.Column=\"0\" Text=\"Тип порушення:\"></TextBlock>\r\n        <TextBlock Grid.Row=\"5\" Grid.Column=\"1\" Text=\"{Binding Criminal.CrimeType}\"></TextBlock>\r\n        <TextBlock Grid.Row=\"6\" Grid.Column=\"0\" Text=\"Улики\" />\r\n        <ListBox Grid.Row=\"6\" Grid.Column=\"0\" ItemsSource=\"{Binding Criminal.Evidences}\">\r\n            <ListBox.ItemTemplate>\r\n                <DataTemplate>\r\n                    <TextBlock Text=\"{Binding Title}\" PointerPressed=\"EditEvidenceBtn_Click\"/>\r\n                </DataTemplate>\r\n            </ListBox.ItemTemplate>\r\n        </ListBox>\r\n        <Button\r\n            Content=\"Додати уліку\"\r\n            Grid.Row=\"6\"\r\n            Grid.Column=\"1\"\r\n            Click=\"AddEvidenceBtn_Click\"\r\n            ></Button>\r\n        <Button Grid.Row=\"7\" Grid.Column=\"1\" Content=\"Повернутися\" VerticalAlignment=\"Bottom\" HorizontalAlignment=\"Left\" Click=\"BackButton_Click\"></Button>\r\n    </Grid>\r\n</UserControl>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/LookCriminalView.axaml b/Views/LookCriminalView.axaml
--- a/Views/LookCriminalView.axaml	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/Views/LookCriminalView.axaml	(date 1750699228036)
@@ -20,7 +20,7 @@
         <TextBlock Grid.Row="5" Grid.Column="0" Text="Тип порушення:"></TextBlock>
         <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding Criminal.CrimeType}"></TextBlock>
         <TextBlock Grid.Row="6" Grid.Column="0" Text="Улики" />
-        <ListBox Grid.Row="6" Grid.Column="0" ItemsSource="{Binding Criminal.Evidences}">
+        <ListBox Grid.Row="6" Grid.RowSpan="2" Grid.Column="0" ItemsSource="{Binding Evidences}">
             <ListBox.ItemTemplate>
                 <DataTemplate>
                     <TextBlock Text="{Binding Title}" PointerPressed="EditEvidenceBtn_Click"/>
Index: ViewModels/LookCriminalViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Collections.ObjectModel;\r\nusing System.Linq;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Threading.Tasks;\r\nusing Avalonia.Controls;\r\nusing Avalonia.Controls.ApplicationLifetimes;\r\nusing InterpoleApp.Database;\r\nusing InterpoleApp.Models;\r\nusing InterpoleApp.Models.Enums;\r\nusing InterpoleApp.Views;\r\nusing InterpoleApp.ViewModels;\r\nusing Evidence = InterpoleApp.Models.Evidence;\r\n\r\nnamespace InterpoleApp.ViewModels;\r\n\r\npublic class LookCriminalViewModel : ViewModelBase\r\n{\r\n    public Guid Id { get; } = Guid.NewGuid();\r\n    public Criminal Criminal { get;}\r\n    public string fullName { get; set; } = \"\";\r\n    public string country { get; set; } = \"\";\r\n    public int DangerLevel { get; set; } = 0;\r\n    public int size { get; set; }\r\n    public EyeColor EyeColor { get; set; }\r\n    public CrimeType CrimeType { get; set; }\r\n    public ObservableCollection<Evidence> Evidences => Criminal.Evidences;\r\n    public LookCriminalViewModel(Criminal criminal)\r\n    {\r\n        Criminal = criminal;\r\n        Console.WriteLine(\"Criminal has bid \" + Criminal.Evidences.Count + \" small has \" + criminal.Evidences.Count);\r\n    }\r\n    public async Task AddEvidDialog(Window owner)\r\n    {\r\n        var _jsonService = new JsonStorageService();\r\n        var dialog = new AddEvidenceView();\r\n        var evid = await dialog.ShowDialogAsync(owner);\r\n\r\n        if (evid != null && App.Current.ApplicationLifetime is IClassicDesktopStyleApplicationLifetime desktop &&\r\n            desktop.MainWindow?.DataContext is MainViewModel main)\r\n        {\r\n            var target = main.CriminalListVM.Criminals.FirstOrDefault(c => c.id == Criminal.id);\r\n            //evid.RelatedCriminal = Criminal;\r\n            Console.WriteLine(\"Before add: Criminal in list?\");\r\n            if (target is not null)\r\n            {\r\n                target.Evidences.Add(evid);\r\n                await main.CriminalListVM.SaveAllCriminals();\r\n            }\r\n            Console.WriteLine(\"After add:\");\r\n            await main.CriminalListVM.SaveAllCriminals();\r\n        }\r\n    }\r\n    public async Task EditViaDialog(Window owner, Evidence evidence)\r\n    {\r\n        if (App.Current.ApplicationLifetime is IClassicDesktopStyleApplicationLifetime desktop &&\r\n            desktop.MainWindow?.DataContext is MainViewModel main)\r\n        {\r\n            Console.WriteLine(\"evidtype before \" + evidence.EvidenceType);\r\n            var _jsonService = new JsonStorageService();\r\n            var dialog = new EditEvidenceView();\r\n            var evid = await dialog.ShowEdiotDialog(owner, evidence);\r\n            Console.WriteLine(\"evidtype after \" + evidence.EvidenceType);\r\n            var index = Evidences.IndexOf(evidence);\r\n            if (index >= 0 && evid != null)\r\n            {\r\n                Evidences[index] = evid;\r\n            }\r\n            await main.CriminalListVM.SaveAllCriminals();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ViewModels/LookCriminalViewModel.cs b/ViewModels/LookCriminalViewModel.cs
--- a/ViewModels/LookCriminalViewModel.cs	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/ViewModels/LookCriminalViewModel.cs	(date 1749404135135)
@@ -12,6 +12,7 @@
 using InterpoleApp.Views;
 using InterpoleApp.ViewModels;
 using Evidence = InterpoleApp.Models.Evidence;
+using InterpoleApp.Systems;
 
 namespace InterpoleApp.ViewModels;
 
@@ -25,11 +26,20 @@
     public int size { get; set; }
     public EyeColor EyeColor { get; set; }
     public CrimeType CrimeType { get; set; }
-    public ObservableCollection<Evidence> Evidences => Criminal.Evidences;
+    public ObservableCollection<Evidence> Evidences { get; set; } = new();
     public LookCriminalViewModel(Criminal criminal)
     {
         Criminal = criminal;
-        Console.WriteLine("Criminal has bid " + Criminal.Evidences.Count + " small has " + criminal.Evidences.Count);
+        if (App.Current.ApplicationLifetime is IClassicDesktopStyleApplicationLifetime desktop &&
+            desktop.MainWindow?.DataContext is MainViewModel main)
+        {
+            var evidences = main.EvidenceService.GetForCriminal(criminal.id);
+            foreach (var evidence in evidences)
+            {
+                Console.WriteLine(evidence.Title);
+            }
+            Evidences = new ObservableCollection<Evidence>(evidences);
+        }
     }
     public async Task AddEvidDialog(Window owner)
     {
@@ -40,16 +50,10 @@
         if (evid != null && App.Current.ApplicationLifetime is IClassicDesktopStyleApplicationLifetime desktop &&
             desktop.MainWindow?.DataContext is MainViewModel main)
         {
-            var target = main.CriminalListVM.Criminals.FirstOrDefault(c => c.id == Criminal.id);
-            //evid.RelatedCriminal = Criminal;
-            Console.WriteLine("Before add: Criminal in list?");
-            if (target is not null)
-            {
-                target.Evidences.Add(evid);
-                await main.CriminalListVM.SaveAllCriminals();
-            }
-            Console.WriteLine("After add:");
+            evid.RelatedCriminalId = Criminal.id;
+            main.EvidenceService.Add(evid);
             await main.CriminalListVM.SaveAllCriminals();
+            await main.EvidenceService.SaveAllAsync();
         }
     }
     public async Task EditViaDialog(Window owner, Evidence evidence)
Index: Views/MainWindow.axaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Window xmlns=\"https://github.com/avaloniaui\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"https://github.com/avaloniaui\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        xmlns:local=\"clr-namespace:InterpoleApp\"\r\n        xmlns:views=\"clr-namespace:InterpoleApp.Views\"\r\n        xmlns:vm=\"clr-namespace:InterpoleApp.ViewModels\"\r\n        x:DataType=\"vm:MainViewModel\"\r\n        x:Class=\"InterpoleApp.Views.MainWindow\"\r\n        Title=\"Навигация в Avalonia\">\r\n\r\n    <Grid>\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height=\"50\" />\r\n            <RowDefinition Height=\"*\"/>\r\n        </Grid.RowDefinitions>\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition Width=\"33*\"/>\r\n            <ColumnDefinition Width=\"33*\"/>\r\n            <ColumnDefinition Width=\"33*\"/>\r\n        </Grid.ColumnDefinitions>\r\n        <Border \r\n            Grid.Row=\"0\" \r\n            Grid.ColumnSpan=\"3\"\r\n            Height=\"50\"\r\n            Background=\"Indigo\"\r\n            BorderBrush=\"Gray\"\r\n            BorderThickness=\"1\"\r\n            CornerRadius=\"6\"\r\n            Padding=\"10\"\r\n            Margin=\"5\">\r\n            <Grid>\r\n                <Grid.ColumnDefinitions>\r\n                    <ColumnDefinition Width=\"20*\"/>\r\n                    <ColumnDefinition Width=\"50*\"/>\r\n                    <ColumnDefinition Width=\"10*\"/>\r\n                    <ColumnDefinition Width=\"10*\"/>\r\n                    <ColumnDefinition Width=\"10*\"/>\r\n                </Grid.ColumnDefinitions>\r\n                <TextBlock\r\n                    TextAlignment=\"Center\"\r\n                    Grid.Column=\"0\">\r\n                    Картотека Інтерполу\r\n                </TextBlock>\r\n                <TextBlock\r\n                    Grid.Column=\"1\">\r\n                </TextBlock>\r\n                <Button \r\n                    Grid.Column=\"2\"\r\n                    Height=\"30\"\r\n                    HorizontalAlignment=\"Center\"\r\n                    Background=\"MediumBlue\"\r\n                    Content=\"\uD83C\uDFE0 Домой\" \r\n                    Command=\"{Binding ShowHomeCommand}\" \r\n                    Margin=\"5\"/>\r\n                <Button \r\n                    Grid.Column=\"3\"\r\n                    Height=\"30\"\r\n                    HorizontalAlignment=\"Center\"\r\n                    Background=\"MediumBlue\"\r\n                    Content=\"Продивитися\" \r\n                    Command=\"{Binding ShowCriminalListCommand}\" \r\n                    Margin=\"5\"/>\r\n                <Button\r\n                    Grid.Column=\"4\"\r\n                    Height=\"30\"\r\n                    HorizontalAlignment=\"Center\"\r\n                    Background=\"MediumBlue\"\r\n                    Content=\"Додати\" \r\n                    Command=\"{Binding ShowComplaintsCommand}\" \r\n                    Margin=\"5\"/>\r\n            </Grid>\r\n        </Border>    \r\n        \r\n        \r\n        <!-- <ContentControl Grid.Row=\"1\" -->\r\n        <!--                 Grid.ColumnSpan=\"3\" Content=\"{Binding CurrentUser}\" /> -->\r\n        <!-- <ContentControl -->\r\n        <!--     Grid.Row=\"1\" -->\r\n        <!--     Grid.ColumnSpan=\"3\" -->\r\n        <!--     Content=\"{Binding CurrentPage}\" /> -->\r\n        <ContentControl Grid.Row=\"1\" Grid.ColumnSpan=\"3\"\r\n                        Content=\"{Binding DisplayedContent}\" />\r\n    </Grid>\r\n</Window>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/MainWindow.axaml b/Views/MainWindow.axaml
--- a/Views/MainWindow.axaml	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/Views/MainWindow.axaml	(date 1750420146199)
@@ -46,19 +46,11 @@
                     Grid.Column="1">
                 </TextBlock>
                 <Button 
-                    Grid.Column="2"
-                    Height="30"
-                    HorizontalAlignment="Center"
-                    Background="MediumBlue"
-                    Content="🏠 Домой" 
-                    Command="{Binding ShowHomeCommand}" 
-                    Margin="5"/>
-                <Button 
                     Grid.Column="3"
                     Height="30"
                     HorizontalAlignment="Center"
                     Background="MediumBlue"
-                    Content="Продивитися" 
+                    Content="Порушники" 
                     Command="{Binding ShowCriminalListCommand}" 
                     Margin="5"/>
                 <Button
@@ -66,19 +58,11 @@
                     Height="30"
                     HorizontalAlignment="Center"
                     Background="MediumBlue"
-                    Content="Додати" 
+                    Content="Скарги" 
                     Command="{Binding ShowComplaintsCommand}" 
                     Margin="5"/>
             </Grid>
         </Border>    
-        
-        
-        <!-- <ContentControl Grid.Row="1" -->
-        <!--                 Grid.ColumnSpan="3" Content="{Binding CurrentUser}" /> -->
-        <!-- <ContentControl -->
-        <!--     Grid.Row="1" -->
-        <!--     Grid.ColumnSpan="3" -->
-        <!--     Content="{Binding CurrentPage}" /> -->
         <ContentControl Grid.Row="1" Grid.ColumnSpan="3"
                         Content="{Binding DisplayedContent}" />
     </Grid>
Index: obj/Debug/net9.0/InterpoleApp.sourcelink.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"documents\":{\"C:\\\\Users\\\\Сава\\\\dotnet\\\\RiderProjects\\\\InterpoleApp\\\\InterpoleApp\\\\*\":\"https://raw.githubusercontent.com/SavaArgunov/InterpoleApp/5c1bd48cf013a64d4cc9e55394a57c73d3c37507/*\"}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/obj/Debug/net9.0/InterpoleApp.sourcelink.json b/obj/Debug/net9.0/InterpoleApp.sourcelink.json
--- a/obj/Debug/net9.0/InterpoleApp.sourcelink.json	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/obj/Debug/net9.0/InterpoleApp.sourcelink.json	(date 1749403581242)
@@ -1,1 +1,1 @@
-{"documents":{"C:\\Users\\Сава\\dotnet\\RiderProjects\\InterpoleApp\\InterpoleApp\\*":"https://raw.githubusercontent.com/SavaArgunov/InterpoleApp/5c1bd48cf013a64d4cc9e55394a57c73d3c37507/*"}}
\ No newline at end of file
+{"documents":{"C:\\Users\\Сава\\dotnet\\RiderProjects\\InterpoleApp\\InterpoleApp\\*":"https://raw.githubusercontent.com/SavaArgunov/InterpoleApp/e5df1e13822aae451b350451489c041a3c8f720a/*"}}
\ No newline at end of file
Index: ViewModels/MainWindowViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing ReactiveUI;\r\nusing System.Reactive;\r\nusing System.Threading.Tasks;\r\nusing Avalonia.Controls;\r\nusing InterpoleApp.Models;\r\nusing InterpoleApp.Systems;\r\nusing InterpoleApp.ViewModels;\r\nusing InterpoleApp.Views;\r\n\r\nnamespace InterpoleApp.ViewModels;\r\n\r\npublic class MainViewModel : ReactiveObject\r\n{\r\n    public CriminalListViewModel CriminalListVM { get; } = new CriminalListViewModel();\r\n    public ComplaintsViewModel ComplaintsVM { get; } = new ComplaintsViewModel();\r\n    public object DisplayedContent\r\n    {\r\n        get\r\n        {\r\n            Console.WriteLine(\"DisplayedContent вызван: \" + (CurrentUser?.GetType().Name ?? CurrentPage?.GetType().Name));\r\n            return (object?)CurrentUser ?? CurrentPage;\r\n        }\r\n    }\r\n    private UserControl? _currentUser;\r\n    public UserControl CurrentUser\r\n    {\r\n        get => _currentUser;\r\n        set => this.RaiseAndSetIfChanged(ref _currentUser, value);\r\n    }\r\n    private ReactiveObject _currentPage;\r\n    public ReactiveObject CurrentPage\r\n    {\r\n        get => _currentPage;\r\n        set => this.RaiseAndSetIfChanged(ref _currentPage, value);\r\n    }\r\n\r\n    public ReactiveCommand<Unit, Unit> ShowHomeCommand { get; }\r\n    public ReactiveCommand<Unit, Unit> ShowCriminalListCommand { get; }\r\n    public ReactiveCommand<Unit, Unit> ShowComplaintsCommand { get; }\r\n\r\n    public void NotifyDisplayedContentChanged()\r\n    {\r\n        this.RaisePropertyChanged(nameof(DisplayedContent));\r\n    }\r\n    public MainViewModel()\r\n    {\r\n        InitializeAsync();\r\n        this.WhenAnyValue(x => x.CurrentUser, x => x.CurrentPage)\r\n            .Subscribe(_ => this.RaisePropertyChanged(nameof(DisplayedContent)));\r\n        ShowHomeCommand = ReactiveCommand.Create(() =>\r\n        {\r\n            CurrentUser = new HomeView\r\n            {\r\n                DataContext = new HomeViewModel()\r\n            };\r\n            CurrentPage = null;\r\n            this.RaisePropertyChanged(nameof(DisplayedContent));\r\n        });\r\n\r\n        ShowCriminalListCommand = ReactiveCommand.Create(() =>\r\n        {\r\n            CurrentUser = new CriminalListView\r\n            {\r\n                DataContext = new CriminalListViewModel()\r\n            };\r\n            CurrentPage = null;\r\n            this.RaisePropertyChanged(nameof(DisplayedContent));\r\n        });\r\n        ShowComplaintsCommand = ReactiveCommand.Create(() =>\r\n        {\r\n            CurrentUser = new ComplaintsView\r\n            {\r\n                DataContext = new ComplaintsViewModel()\r\n            };\r\n            CurrentPage = null;\r\n            this.RaisePropertyChanged(nameof(DisplayedContent));\r\n        });\r\n        \r\n        // Показываем главную по умолчанию\r\n        CurrentPage = new HomeViewModel();\r\n    }\r\n    public void ShowCriminalDetails(Criminal criminal)\r\n    {\r\n        CurrentUser = new CriminalListView();\r\n        CurrentPage = null;\r\n        this.RaisePropertyChanged(nameof(CurrentUser));\r\n    }\r\n    public async Task InitializeAsync()\r\n    {\r\n        var service = new EvidenceService();\r\n        await service.LoadAllAsync();\r\n    }    \r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ViewModels/MainWindowViewModel.cs b/ViewModels/MainWindowViewModel.cs
--- a/ViewModels/MainWindowViewModel.cs	(revision e5df1e13822aae451b350451489c041a3c8f720a)
+++ b/ViewModels/MainWindowViewModel.cs	(date 1749403391581)
@@ -14,6 +14,7 @@
 {
     public CriminalListViewModel CriminalListVM { get; } = new CriminalListViewModel();
     public ComplaintsViewModel ComplaintsVM { get; } = new ComplaintsViewModel();
+    public EvidenceService EvidenceService { get; set; } = new EvidenceService();
     public object DisplayedContent
     {
         get
@@ -89,6 +90,7 @@
     public async Task InitializeAsync()
     {
         var service = new EvidenceService();
+        EvidenceService = service;
         await service.LoadAllAsync();
     }    
 }
\ No newline at end of file
diff --git a/Systems/EvidenceServices.cs b/Models/Systems/EvidenceServices.cs
rename from Systems/EvidenceServices.cs
rename to Models/Systems/EvidenceServices.cs
diff --git a/Database/IDbServices.cs b/Models/Systems/IDbServices.cs
rename from Database/IDbServices.cs
rename to Models/Systems/IDbServices.cs
diff --git a/Systems/LevenshteinDistance.cs b/Models/Systems/LevenshteinDistance.cs
rename from Systems/LevenshteinDistance.cs
rename to Models/Systems/LevenshteinDistance.cs
diff --git a/Systems/DangerLevelTextConverter.cs b/Models/Systems/DangerLevelTextConverter.cs
rename from Systems/DangerLevelTextConverter.cs
rename to Models/Systems/DangerLevelTextConverter.cs
